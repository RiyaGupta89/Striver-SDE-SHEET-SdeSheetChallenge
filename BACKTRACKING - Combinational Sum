class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        HashSet<List<Integer>> answer = new HashSet<>();
        fillArray(0,candidates,target,new ArrayList<>(),answer);
        List<List<Integer>> res=new ArrayList<>(answer);
        return res;
    }
    private void fillArray(int ci, int[] candidates, int target, List<Integer> currAns,HashSet<List<Integer>> answer){
        if(target==0){
                answer.add(new ArrayList<>(currAns));
            }
        if(ci>=candidates.length){
            
            return;
        }
        
        if(target>=candidates[ci]){
            currAns.add(candidates[ci]);
            fillArray(ci,candidates,target-candidates[ci],currAns,answer);
            currAns.remove(currAns.size()-1);
        }
        fillArray(ci+1,candidates,target,currAns,answer);
        return;
        
    }
}
